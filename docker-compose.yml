version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:8000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=main:create_app
      - FLASK_DEBUG=1
      - SECRET_KEY=dev_secret_key_replace_in_production
      - JWT_SECRET_KEY=dev_jwt_secret_key_replace_in_production
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://user:password@db:3306/appdb
      - DEFAULT_CURRENCY=SGD
      - DEFAULT_USER_ROLE=User
      # Explicitly set Google SSO to empty to make it clear it's not configured
      - GOOGLE_CLIENT_ID=
      - GOOGLE_CLIENT_SECRET=
      - GOOGLE_REDIRECT_URI=
      # Add debugging
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    depends_on:
      - db
    command: >
      bash -c "
        echo 'Waiting for MariaDB to become available...'
        until mysql -h db -u user -ppassword -e 'SELECT 1' &> /dev/null; do
          echo 'MariaDB not ready yet - sleeping for 1 second'
          sleep 1
        done
        echo 'MariaDB is ready!'
        
        # Initialize migrations directory if it doesn't exist
        if [ ! -d '/app/migrations' ]; then
          echo 'Initializing migrations directory...'
          flask db init
        fi
        
        # Run database migrations
        echo 'Running migrations...'
        flask db upgrade
        
        # Start the application with the app function directly
        echo 'Starting application...'
        python -m flask run --host=0.0.0.0 --port=8000
      "

  db:
    image: mariadb:10.6
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=appdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql

volumes:
  mariadb_data: